comment {
"
Learning structs.
";
};

test_set{
    package{
        name{"a name";};
        imports{M1;M2;M3;};
        exports{E1;};
        version{1;};
    };

    package{
        name{"a name";};
        imports{M1;M2;M3;};
        version{1;};
    };

    package{
        name{"a name";};
        owner{"Smith";};
        imports{M1;M2;M3;};
        version{1;};
    };

    package{
        name{"a name";};
        owner{"Smith";};
        exports{E1;};
        imports{M1;M2;M3;};
        version{1;};
    };

    package{
        name{"a name";};
        owner{"Smith";};
        owner{"Multiple owners allowed.";};
        exports{E1;};
        imports{M1;M2;M3;};
        version{1;};
    };

    package{
        owner{"random guy";};
        exports{E1;};
        imports{M1;M2;M3;};
        version{1;};
    };
};

val run_1 = learn_struct(
 input{
     test_set{
         root.test_set.package.at(0);
     };
     spec_name{
         Spec_package_run_1;
     };
 }
);

run_1.result.state_machine.sm;

val run_2 = learn_struct(
 input{
     test_set{
         root.test_set.package.at(0);
         root.test_set.package.at(1);
     };
     spec_name{
         Spec_package_run_2;
     };
 }
);

run_2.result.state_machine.sm;

Simulation{
    Start{Spec_package_run_1;};
    kind Event;
    Event name, version, exports, imports, eof;
    name;
    imports;
    exports;
    version;
    eof;
};

Simulation{
    Start{Spec_package_run_2;};
    kind Event;
    Event name, version, exports, imports, eof;
    name; imports; version; eof;
};
